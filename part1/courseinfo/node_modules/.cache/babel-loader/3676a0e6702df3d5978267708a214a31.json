{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jakubziemann/Desktop/FullStackOpen2020/part1/courseinfo/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\n\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.name, \" \", props.exercises]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Part;\n\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Part, {\n      part: props.exercises.part1,\n      exercises: props.exercises.exercises1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: props.exercises.part2,\n      exercises: props.exercises.exercises2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: props.exercises.part3,\n      exercises: props.exercises.exercises3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Content;\n\nconst Total = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of exercises \", props.total.exercises1 + props.total.exercises2 + props.total.exercises3]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 4\n  }, this);\n};\n\n_c4 = Total;\n\nconst App = () => {\n  const course = 'Half Stack application development';\n  const part1 = 'Fundamentals of React';\n  const exercises1 = 10;\n  const part2 = 'Using props to pass data';\n  const exercises2 = 7;\n  const part3 = 'State of a component';\n  const exercises3 = 14;\n  const exercises = exercises1 + exercises2 + exercises3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      exercises: {\n        part1: part1,\n        exercises1: exercises1,\n        part2: part2,\n        exercises2: exercises2,\n        part3: part3,\n        exercises3: exercises3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      total: {\n        exercises1: exercises1,\n        exercises2: exercises2,\n        exercises3: exercises3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/jakubziemann/Desktop/FullStackOpen2020/part1/courseinfo/src/index.js"],"names":["React","ReactDOM","Header","props","course","Part","name","exercises","Content","part1","exercises1","part2","exercises2","part3","exercises3","Total","total","App","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nconst Header = (props) => {\n\n  return (\n    \n    <div>\n    <h1>{props.course}</h1>\n    </div>\n  )\n}\n\nconst Part = (props) => {\n  return(\n    <div>\n      <p>{props.name} {props.exercises}</p>\n    </div>\n  )\n}\n\nconst Content = (props) => {\n  return(\n    <div>\n    <Part part = {props.exercises.part1} exercises={props.exercises.exercises1}></Part>\n    <Part part = {props.exercises.part2} exercises={props.exercises.exercises2}></Part>\n    <Part part = {props.exercises.part3} exercises={props.exercises.exercises3}></Part>\n    </div>\n  )\n}\n\nconst Total = (props) => {\n  return (\n   <div>\n     <p>Number of exercises {props.total.exercises1 + props.total.exercises2 + props.total.exercises3 }</p>\n   </div> \n  )\n}\n\nconst App = () => {\n  const course = 'Half Stack application development'\n  const part1 = 'Fundamentals of React'\n  const exercises1 = 10\n  const part2 = 'Using props to pass data'\n  const exercises2 = 7\n  const part3 = 'State of a component'\n  const exercises3 = 14\n  const exercises = exercises1 + exercises2 + exercises3\n\n  return (\n    <div>\n      <Header course = {course}></Header>\n      <Content exercises = {{part1:part1, exercises1:exercises1, part2:part2, exercises2:exercises2, part3:part3, exercises3: exercises3}} />\n          <Total total={{exercises1:exercises1, exercises2:exercises2, exercises3:exercises3}} />\n    </div>\n    \n      \n    \n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}